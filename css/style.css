/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/

/*
First lecture
* The best way to perform a basic reset using the universal selector.
* How to set project-wide font definitions.
* How to clip parts of elements using clip-path. 

Second lecture
* The easiest way to center anything with the transform, top and left properties.

3rd lecture
* How to create CSS animations using @keyframes and the animation property.
*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  /* fonts-family are inherited */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg);
  /* makes the image always cover the container */
  background-size: cover;
  /* selects the default position of the image */
  background-position: top;

  /* loads a polygon function */
  /* clip-path: polygon(x y, x y, x y); */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  position: relative;
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  /* - what is does is hides the back face of the element
     - useful to prevent Z axis elements to show
     - useful to prevent animation shaking
  */
  backface-visibility: hidden;
}

.heading-primary--main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-delay: 3s; */
  /* animation-iteration-count: 3; */
}

.heading-primary--sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  /* combine: name - duration - timing */
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px) rotate(-50deg);
  }

  60% {
    transform: rotate(120deg);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}
